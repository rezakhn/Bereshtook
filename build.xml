<?xml version="1.0" encoding="UTF-8"?>
<project name="Bereshtook" default="help">

    <!-- The local.properties file is created and updated by the 'android' tool.
         It contains the path to the SDK. It should *NOT* be checked into
         Version Control Systems. -->
    <loadproperties srcFile="local.properties" />

    <!-- The ant.properties file can be created by you. It is only edited by the
         'android' tool to add properties to it.
         This is the place to change some Ant specific build properties.
         Here are some properties you may want to change/update:

         source.dir
             The name of the source directory. Default is 'src'.
         out.dir
             The name of the output directory. Default is 'bin'.

         For other overridable properties, look at the beginning of the rules
         files in the SDK, at tools/ant/build.xml

         Properties related to the SDK location or the project target should
         be updated using the 'android' tool with the 'update' action.

         This file is an integral part of the build system for your
         application and should be checked into Version Control Systems.

         -->
    <property file="ant.properties" />

    <!-- The project.properties file is created and updated by the 'android'
         tool, as well as ADT.

         This contains project specific properties such as project target, and library
         dependencies. Lower level build properties are stored in ant.properties
         (or in .classpath for Eclipse projects).

         This file is an integral part of the build system for your
         application and should be checked into Version Control Systems. -->
    <loadproperties srcFile="project.properties" />

    <!-- quick check on sdk.dir -->
    <fail
            message="sdk.dir is missing. Make sure to generate local.properties using 'android update project'"
            unless="sdk.dir"
    />

    <!-- Custom Android task to deal with the project target, and import the proper rules.
         This requires ant 1.6.0 or above. -->
    <path id="android.antlibs">
        <pathelement path="${sdk.dir}/tools/lib/anttasks.jar" />
        <pathelement path="${sdk.dir}/tools/lib/sdklib.jar" />
        <pathelement path="${sdk.dir}/tools/lib/androidprefs.jar" />
        <pathelement path="${sdk.dir}/tools/lib/apkbuilder.jar" />
        <pathelement path="${sdk.dir}/tools/lib/jarutils.jar" />
    </path>

    <!-- Execute the Android Setup task that will setup some properties specific to the target,
         and import the build rules files.

         The rules file is imported from
            <SDK>/platforms/<target_platform>/templates/android_rules.xml

         To customize some build steps for your project:
         - copy the content of the main node <project> from android_rules.xml
         - paste it in this build.xml below the <setup /> task.
         - disable the import by changing the setup task below to <setup import="false" />

         This will ensure that the properties are setup correctly but that your customized
         build steps are used.
    -->

    <target name="-pre-build">
	<tstamp>
	    <format property="build.date" pattern="yyyy-MM-dd" />
	</tstamp>
	<exec executable="git" outputproperty="git.revision">
	    <arg line="describe --tags --dirty=+"/>
	</exec>
	<copy file="version.xml.tpl" tofile="${resource.absolute.dir}/values/version.xml" overwrite="true">
	    <filterchain>
		<replacetokens>
		    <token key="build_revision" value="${git.revision}"/>
		    <token key="build_date" value="${build.date}"/>
		    <token key="build_version" value="${ant.project.name} ${git.revision} ${build.date}"/>
		</replacetokens>
	    </filterchain>

	</copy>
    </target>

    <target name="check-proguard">
        <available file="tools/proguard.jar" property="have.proguard"/>
    </target>

    <target name="proguard" depends="check-proguard">
	    <fail unless="have.proguard">Please download ProGuard from http://sourceforge.net/projects/proguard/files/ and place the JAR into the tools/ directory!</fail>
    </target>

    <target name="proguard.execute" depends="-compile, -post-compile" if="have.proguard">
        <taskdef resource="proguard/ant/task.properties"
                classpath="tools/proguard.jar" />
	<!-- following lines copied from android-sdk build.xml -->
	<path id="project.jars.ref">
		<pathelement location="${out.classes.absolute.dir}" />
		<path refid="project.all.jars.path" />
	</path>
	<pathconvert property="project.jars" refid="project.jars.ref">
		<firstmatchmapper>
			<regexpmapper from='^([^ ]*)( .*)$$' to='"\1\2"'/>
			<identitymapper/>
		</firstmatchmapper>
	</pathconvert>

        <proguard configuration="proguard.cfg">
	    -injars ${project.jars}
	    -outjars ${out.absolute.dir}/classes.min.jar
	    -libraryjars ${toString:project.target.class.path}
	    -printusage ${out.absolute.dir}/proguard.usage
        </proguard>
    </target>

    <!-- Convert this project's .class files into .dex files. -->
    <target name="dex.proguard" depends="proguard.execute" if="have.proguard">
	<dex executable="${dx}" output="${intermediate.dex.file}"
                    nolocals="@{nolocals}"
                    verbose="${verbose}"
                    previousBuildType="${build.last.target}"
                    buildType="${build.target}">
		    <path path="${out.absolute.dir}/classes.min.jar" />
	</dex>
    </target>

    <!-- Convert this project's .class files into .dex files. -->
    <target name="dex.vanilla" depends="-compile, -post-compile" unless="have.proguard">
	<dex-helper>
	</dex-helper>
    </target>

    <target name="-dex" depends="dex.vanilla, dex.proguard" />

    <!-- Import the actual build file.

         To customize existing targets, there are two options:
         - Customize only one target:
             - copy/paste the target into this file, *before* the
               <import> task.
             - customize it to your needs.
         - Customize the whole content of build.xml
             - copy/paste the content of the rules files (minus the top node)
               into this file, replacing the <import> task.
             - customize to your needs.

         ***********************
         ****** IMPORTANT ******
         ***********************
         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,
         in order to avoid having your file be overridden by tools such as "android update project"
    -->
    <!-- version-tag: 1 -->
    <import file="${sdk.dir}/tools/ant/build.xml" />

</project>
